// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // Connexion process 
  id        String      @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  twoFactorAuthSecret String?
  isTwoFactorAuthEnabled Boolean @default(false)

  // Profile process
  intraId Int @unique
  email42 String @unique
  login String @unique @db.VarChar(12)
  firstName String 
  lastName String
  avatar String

  status UserStatus @default(ONLINE)

  // relation to other tables
  members	ChannelMember[]
  message	Message[]
}

model Channel {
  id		Int     		@id @unique @default(autoincrement())
  createdAt	DateTime		@default(now())
  updatedAt	DateTime		@updatedAt

  name		String			@unique
  password	String
  private	Boolean			@default(false)

  members	ChannelMember[]
  messages	Message[]
}

model ChannelMember {
  id		Int				@id @unique @default(autoincrement())

  channelId	Int
  userId	Int
  channel	Channel			@relation(fields: [channelId], references: [id])
  user		User			@relation(fields: [userId], references: [intraId])

  muteEnd	DateTime?
  isMute	Boolean			@default(false)
  isAdmin	Boolean			@default(false)
  isOwner	Boolean			@default(false)

  @@unique([channelId, userId])
}

model Message {
  id		Int				@id @unique @default(autoincrement())
  createdAt	DateTime		@default(now())

  userId	Int
  channelId	Int
  member	User			@relation(fields: [userId], references: [intraId])
  channel	Channel			@relation(fields: [channelId], references: [id])

  content	String
}

enum UserStatus {
  ONLINE
  OFFLINE
  PLAYING
}
