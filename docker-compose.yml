version: '3'

services:
    db:
        image: postgres:14
        container_name: db
        restart: always
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        env_file:
            - .env
            - ./backend/.env
        networks:
            - transcendence_network

    # backend:
    #     container_name: backend
    #     build:
    #         context: ./backend
    #         dockerfile: Dockerfile
    #     env_file:
    #         - ./backend/.env
    #     ports:
    #         - "5001:5001"
    #     depends_on:
    #         - db
    #         - frontend
    #     networks:
    #         - transcendence_network
    #     restart: unless-stopped

    # frontend:
    #     container_name: frontend
    #     build:
    #         context: ./frontend
    #         dockerfile: Dockerfile
    #     env_file:
    #         - ./frontend/.env
    #     ports:
    #         - "3000:3000"
    #     depends_on:
    #         - db
    #     networks:
    #         - transcendence_network
    #     restart: unless-stopped
    
    # prisma-studio:
    #     container_name: prisma-studio
    #     build:
    #         context: ./backend
    #         dockerfile: Dockerfile.studio
    #     env_file:
    #         - ./backend/.env
    #     ports:
    #         - "5555:5555"
    #     depends_on:
    #         - db
    #         - backend
    #         - frontend
    #     networks:
    #         - transcendence_network
    #     restart: unless-stopped



    # CLEAN :
    # image: postgres:14
    # container_name: db
    # env_file:
    #     - .env
    #     - ./backend/.env
    # ports:
    #     - "5432:5432"
    # networks:
    #     - transcendence_network
    # restart: always
    # volumes:
    #     - pgdata:/var/lib/postgresql/data

    # frontend:
    #     container_name: frontend
    #     build: ./frontend
    #     env_file:
    #         - .env
    #         - ./frontend/.env
    #     ports:
    #         - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    #     depends_on:
    #         - db
    #     networks:
    #         - transcendence_network
    #     restart: unless-stopped
    
    # backend:
    #     container_name: backend
    #     build: ./backend
    #     env_file:
    #         - .env
    #         - ./backend/.env
    #     ports:
    #         - "${BACKEND_PORT}:${BACKEND_PORT}"
    #     depends_on:
    #         - db
    #         - frontend
    #     networks:
    #         - transcendence_network
    #     restart: unless-stopped

volumes:
    pgdata:
        name: pgdata

networks:
    transcendence_network:
        driver: bridge
